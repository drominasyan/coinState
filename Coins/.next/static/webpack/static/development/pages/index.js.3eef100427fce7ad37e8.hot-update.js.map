{"version":3,"file":"static/webpack/static/development/pages/index.js.3eef100427fce7ad37e8.hot-update.js","sources":["webpack:///./containers/Coins/List.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\nimport Link from 'next/link'\nimport {Container, Tabs, Tab, Spinner} from 'react-bootstrap'\nimport { Icon } from 'antd';\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        const { list, UI } = this.props;\n        const { loading } = UI;\n        const renderValue = (columnItem, listItem, index) => {\n            switch (columnItem.dataIndex) {\n            case 'id':\n                return index + 1;\n            case 'name':\n                return <Link href={`/coins/${listItem[columnItem.dataIndex]}`}>\n                    <a>\n                        <img src={listItem.icon} className = 'coinIcon'/>\n                        {listItem[columnItem.dataIndex]}</a>\n                    </Link>\n                    \n            default : \n                return listItem[columnItem.dataIndex]\n        }\n        }\n        return (\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\n                <Tab eventKey=\"Coins\" title=\"Coins\">\n                    <div className='table'>                \n                        {columns.map(columnItem => (\n                            <div className='cols' key={columnItem.key}>\n                                <div className='colTitle'>{columnItem.title}</div>\n                                <div className = 'rows'>\n                                    {list.map((listItem, index) => <div className='rowItem' key={listItem.id}>\n                                        {renderValue(columnItem, listItem, index)}\n                                    </div>)}\n                                </div>\n                            </div>)\n                        )}\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\n                        <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Profile\">\n                    {/* <Sonnet /> */}\n                </Tab>\n            </Tabs>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;;;;;;AAbA;AAAA;AAEA;AACA;;;AAWA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAXA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAzDA;;;;AATA;AACA;AADA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAkEA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAFA;AAIA;;;;A","sourceRoot":""}