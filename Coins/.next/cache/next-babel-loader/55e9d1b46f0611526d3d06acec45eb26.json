{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/pages/coins/[id].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"loadMoreCoins\", () => {\n      const {\n        listReload,\n        uiRefresh,\n        UI\n      } = this.props;\n      const {\n        skip\n      } = UI;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n  }\n\n  static getInitialProps() {}\n\n  componentDidMount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Coming Soon ... \");\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/pages/coins/[id].js"],"names":["React","connect","coinsActions","PropTypes","List","Component","listReload","uiRefresh","UI","props","skip","getInitialProps","componentDidMount","render","list","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;;AAAA,2CAgBf,MAAM;AAClB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA,SAAd;AAAyBC,QAAAA;AAAzB,UAAgC,KAAKC,KAA3C;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWF,EAAjB;AACAD,MAAAA,SAAS,CAAC;AACNG,QAAAA,IAAI,EAAGA,IAAI,GAAG;AADR,OAAD,CAAT;AAGAJ,MAAAA,UAAU;AACb,KAvB8B;AAAA;;AAS/B,SAAOK,eAAP,GAAyB,CAAE;;AAE3BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACN,MAAAA;AAAD,QAAe,KAAKG,KAA1B;AACAH,IAAAA,UAAU;AACb;;AAWDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGH;;AA7B8B;;gBAA7BT,I,eAEiB;AACfU,EAAAA,IAAI,EAAUX,SAAS,CAACY,KAAV,CAAgBC,UADf;AAEfR,EAAAA,EAAE,EAAYL,SAAS,CAACc,MAAV,CAAiBD,UAFhB;AAGfV,EAAAA,UAAU,EAAIH,SAAS,CAACe,IAAV,CAAeF,UAHd;AAIfT,EAAAA,SAAS,EAAKJ,SAAS,CAACe,IAAV,CAAeF;AAJd,C;;AA8BvB,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAO;AACLN,IAAAA,IAAI,EAAMM,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CADL;AAELd,IAAAA,EAAE,EAAGY,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,IAAhB;AAFA,GAAP;AAID;;AACD,MAAMC,kBAAkB,GAAG;AACzBjB,EAAAA,UAAU,EAAGJ,YAAY,CAACI,UADD;AAEzBC,EAAAA,SAAS,EAAIL,YAAY,CAACK;AAFD,CAA3B;AAIA,eAAeN,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport PropTypes from 'prop-types';\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        return (\n            <div>Coming Soon ... </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}