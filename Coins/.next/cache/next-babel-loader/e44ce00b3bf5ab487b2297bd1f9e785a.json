{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { Table, Tag } from 'antd';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  componentDidMount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      loading\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, columns.map((item, index) => __jsx(\"div\", {\n      className: \"cols\",\n      key: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"colTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, item.title), __jsx(\"div\", {\n      className: \"rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, list.map(listItem => __jsx(\"div\", {\n      className: \"rowItem\",\n      key: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 55\n      }\n    }, listItem[item.dataIndex])))))), __jsx(\"button\", {\n      onClick: this.loadMoreCoins,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Show More\"));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    loading: state.Coins.get('UI').loading\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","Table","Tag","columns","PropTypes","List","Component","getInitialProps","store","componentDidMount","listReload","props","render","list","loading","map","item","index","key","title","listItem","id","dataIndex","loadMoreCoins","array","isRequired","bool","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,MAA3B;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAK/B,SAAOC,eAAP,CAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAgC,CAAE;;AAElCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAe,KAAKC,KAA1B;AACAD,IAAAA,UAAU;AACb;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAkB,KAAKH,KAA7B;AACA,WACI,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKR,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAED,IAAI,CAACE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BF,IAAI,CAACG,KAAhC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IAAI,CAACE,GAAL,CAASK,QAAQ,IAAI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CD,QAAQ,CAACJ,IAAI,CAACM,SAAN,CAApD,CAArB,CADL,CAFJ,CADH,CAFL,CADJ,EAYI;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZJ,CADJ;AAgBH;;AA9B8B;;gBAA7BlB,I,eACiB;AACfQ,EAAAA,IAAI,EAAGT,SAAS,CAACoB,KAAV,CAAgBC,UADR;AAEfX,EAAAA,OAAO,EAAGV,SAAS,CAACsB,IAAV,CAAeD;AAFV,C;;AAgCvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAO;AACLf,IAAAA,IAAI,EAAGe,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CADF;AAELhB,IAAAA,OAAO,EAAGc,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,IAAhB,EAAsBhB;AAF3B,GAAP;AAID;;AACD,MAAMiB,kBAAkB,GAAG;AACzBrB,EAAAA,UAAU,EAAGV,YAAY,CAACU;AADD,CAA3B;AAGA,eAAeX,OAAO,CAAC4B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1B,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport { Table, Tag } from 'antd';\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n    static propTypes = {\n        list : PropTypes.array.isRequired,\n        loading : PropTypes.bool.isRequired,\n    }\n    static getInitialProps({store}) {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    render() {\n        const {list, loading} = this.props;\n        return (\n            <>\n                <div className='table'>                \n                    {/* <Table columns={columns} dataSource={list} pagination = {false} loading={loading}/> */}\n                    {columns.map((item, index) => (\n                        <div className='cols' key={item.key}>\n                            <div className='colTitle'>{item.title}</div>\n                            <div className = 'rows'>\n                                {list.map(listItem => <div className='rowItem' key={listItem.id}>{listItem[item.dataIndex]}</div>)}\n                            </div>\n                        </div>)\n                    )}\n                </div>\n                <button onClick={this.loadMoreCoins}>Show More</button>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list : state.Coins.get('list'),\n    loading : state.Coins.get('UI').loading\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}