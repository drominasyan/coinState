{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'; // import { createBrowserHistory } from 'history';\n\nimport { routerReducer, routerMiddleware } from 'react-router-redux'; //import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\nvar history = createBrowserHistory();\nvar sagaMiddleware = createSagaMiddleware();\nvar routeMiddleware = routerMiddleware(history);\nvar middlewares = [sagaMiddleware, routeMiddleware];\nvar composeEnhancers = true && true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  trace: true,\n  traceLimit: 20\n}) : compose;\nvar store = createStore(combineReducers(_objectSpread({}, reducers, {\n  router: routerReducer\n})), composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\nsagaMiddleware.run(rootSaga);\nexport { store };","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","routerReducer","routerMiddleware","createSagaMiddleware","reducers","rootSaga","history","createBrowserHistory","sagaMiddleware","routeMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","store","router","run"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE,C,CACA;;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,IAAMC,OAAO,GAAWC,oBAAoB,EAA5C;AACA,IAAMC,cAAc,GAAIL,oBAAoB,EAA5C;AACA,IAAMM,eAAe,GAAGP,gBAAgB,CAACI,OAAD,CAAxC;AACA,IAAMI,WAAW,GAAO,CAACF,cAAD,EAAiBC,eAAjB,CAAxB;AAEA,IAAME,gBAAgB,GAAI,gBAErBC,MAAM,CAACC,oCAFc,GAGpBD,MAAM,CAACC,oCAAP,CAA4C;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE;AAA3B,CAA5C,CAHoB,GAIpBf,OAJN;AAMA,IAAMgB,KAAK,GAAGnB,WAAW,CACvBC,eAAe,mBACVM,QADU;AAEba,EAAAA,MAAM,EAAEhB;AAFK,GADQ,EAKvBU,gBAAgB,CAACZ,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CALO,CAAzB;AAQAF,cAAc,CAACU,GAAf,CAAmBb,QAAnB;AACA,SAASW,KAAT","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n// import { createBrowserHistory } from 'history';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\n//import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst history         = createBrowserHistory();\nconst sagaMiddleware  = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares     = [sagaMiddleware, routeMiddleware];\n\nconst composeEnhancers =  process.env.NODE_ENV !== 'production'\n  && typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 20 })\n    : compose;\n\nconst store = createStore(\n  combineReducers({\n    ...reducers,\n    router: routerReducer,\n  }),\n  composeEnhancers(applyMiddleware(...middlewares)),\n);\n\nsagaMiddleware.run(rootSaga);\nexport { store };\n"]},"metadata":{},"sourceType":"module"}