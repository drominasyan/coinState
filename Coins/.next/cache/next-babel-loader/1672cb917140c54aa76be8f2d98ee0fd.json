{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { Table, Tag } from 'antd';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var listReload = this.props.listReload;\n      listReload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          list = _this$props.list,\n          loading = _this$props.loading;\n      return __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, columns.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"cols\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          classname: \"colTitle\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }\n        }, item.title), __jsx(\"div\", {\n          className: \"rows\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        }, list.map(function (listIitem) {\n          return __jsx(\"div\", {\n            className: \"rowItem\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 52\n            }\n          }, listIitem[item.dataIndex]);\n        })));\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    loading: state.Coins.get('UI').loading\n  };\n}\n\nvar mapDispatchToProps = {\n  listReload: coinsActions.listReload\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","Table","Tag","columns","PropTypes","List","listReload","props","list","loading","map","item","index","title","listIitem","dataIndex","store","Component","array","isRequired","bool","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,MAA3B;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,I;;;;;;;;;;;;;wCAOiB;AAAA,UACRC,UADQ,GACM,KAAKC,KADX,CACRD,UADQ;AAEfA,MAAAA,UAAU;AACb;;;6BAEQ;AAAA;;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,OADR,eACQA,OADR;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKN,OAAO,CAACO,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,eACT;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BD,IAAI,CAACE,KAAhC,CADJ,EAEI;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,IAAI,CAACE,GAAL,CAAS,UAAAI,SAAS;AAAA,iBAAI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BA,SAAS,CAACH,IAAI,CAACI,SAAN,CAAnC,CAAJ;AAAA,SAAlB,CADL,CAFJ,CADS;AAAA,OAAZ,CAFL,CADJ;AAaH;;;0CAtB+B;AAAA,UAARC,KAAQ,QAARA,KAAQ;AAAE;;;;EALnBlB,KAAK,CAACmB,S;;gBAAnBZ,I,eACiB;AACfG,EAAAA,IAAI,EAAGJ,SAAS,CAACc,KAAV,CAAgBC,UADR;AAEfV,EAAAA,OAAO,EAAGL,SAAS,CAACgB,IAAV,CAAeD;AAFV,C;;AA6BvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAO;AACLd,IAAAA,IAAI,EAAGc,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CADF;AAELf,IAAAA,OAAO,EAAGa,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,IAAhB,EAAsBf;AAF3B,GAAP;AAID;;AACD,IAAMgB,kBAAkB,GAAG;AACzBnB,EAAAA,UAAU,EAAGN,YAAY,CAACM;AADD,CAA3B;AAGA,eAAeP,OAAO,CAACsB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport { Table, Tag } from 'antd';\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n    static propTypes = {\n        list : PropTypes.array.isRequired,\n        loading : PropTypes.bool.isRequired,\n    }\n    static getInitialProps({store}) {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    render() {\n        const {list, loading} = this.props;\n        return (\n            <div className='table'>                \n                {/* <Table columns={columns} dataSource={list} pagination = {false} loading={loading}/> */}\n                {columns.map((item, index) => (\n                    <div className='cols'>\n                        <div classname='colTitle'>{item.title}</div>\n                        <div className = 'rows'>\n                            {list.map(listIitem => <div className='rowItem'>{listIitem[item.dataIndex]}</div>)}\n                        </div>\n                    </div>)\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list : state.Coins.get('list'),\n    loading : state.Coins.get('UI').loading\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}