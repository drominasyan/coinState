{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { Table, Tag } from 'antd';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"loadMoreCoins\", () => {\n      const {\n        listReload,\n        uiRefresh,\n        UI\n      } = this.props;\n      const {\n        skip\n      } = UI;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n  }\n\n  static getInitialProps() {}\n\n  componentDidMount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      UI\n    } = this.props;\n    const {\n      loading\n    } = UI;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, columns.map(item => __jsx(\"div\", {\n      className: \"cols\",\n      key: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"colTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, item.title), __jsx(\"div\", {\n      className: \"rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, list.map(listItem => __jsx(\"div\", {\n      className: \"rowItem\",\n      key: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 55\n      }\n    }, listItem[item.dataIndex]))))), true && __jsx(Spin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    })), __jsx(\"button\", {\n      onClick: this.loadMoreCoins,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Show More\"));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","Table","Tag","columns","PropTypes","Spin","List","Component","listReload","uiRefresh","UI","props","skip","getInitialProps","componentDidMount","render","list","loading","map","item","key","title","listItem","id","dataIndex","loadMoreCoins","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport { Table, Tag } from 'antd';\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\n\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        const { list, UI } = this.props;\n        const { loading } = UI;\n        return (\n            <>\n                <div className='table'>                \n                    {/* <Table columns={columns} dataSource={list} pagination = {false} loading={loading}/> */}\n                    {columns.map(item => (\n                        <div className='cols' key={item.key}>\n                            <div className='colTitle'>{item.title}</div>\n                            <div className = 'rows'>\n                                {list.map(listItem => <div className='rowItem' key={listItem.id}>\n                                    {listItem[item.dataIndex]}\n                                </div>)}\n                            </div>\n                        </div>)\n                    )}\n                    {\n                        true && <Spin />\n                    }\n                </div>\n                <button onClick={this.loadMoreCoins}>Show More</button>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}