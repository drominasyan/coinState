{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types'; // import Spinner from 'react-bootstrap/Spinner';\n// import Tabs from 'react-bootstrap/Tabs'\n// import Tab from 'react-bootstrap/Tab'\n// import Container from 'react-bootstrap/Container'\n\nimport { Container, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { Icon } from 'antd';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"loadMoreCoins\", () => {\n      const {\n        listReload,\n        uiRefresh,\n        UI\n      } = this.props;\n      const {\n        skip\n      } = UI;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n  }\n\n  static getInitialProps() {}\n\n  componentDidMount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      UI\n    } = this.props;\n    const {\n      loading\n    } = UI;\n\n    const renderValue = (columnItem, listItem, index) => {\n      switch (columnItem.dataIndex) {\n        case 'id':\n          return index + 1;\n\n        case 'name':\n          return __jsx(React.Fragment, null, __jsx(\"img\", {\n            src: listItem.icon,\n            className: \"coinIcon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }\n          }), listItem[columnItem.dataIndex]);\n\n        default:\n          return listItem[columnItem.dataIndex];\n      }\n    };\n\n    return __jsx(Tabs, {\n      defaultActiveKey: \"Coins\",\n      transition: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(Tab, {\n      eventKey: \"Coins\",\n      title: \"Coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, columns.map(columnItem => __jsx(\"div\", {\n      className: \"cols\",\n      key: columnItem.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"colTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, columnItem.title), __jsx(\"div\", {\n      className: \"rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, list.map((listItem, index) => __jsx(\"div\", {\n      className: \"rowItem\",\n      key: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 68\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Home\")), renderValue(columnItem, listItem, index)))))), loading && __jsx(Spinner, {\n      animation: \"border\",\n      variant: \"secondary\",\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }), __jsx(\"button\", {\n      onClick: this.loadMoreCoins,\n      className: \"showMore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Show More\"))), __jsx(Tab, {\n      eventKey: \"profile\",\n      title: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","columns","PropTypes","Container","Tabs","Tab","Spinner","Icon","List","Component","listReload","uiRefresh","UI","props","skip","getInitialProps","componentDidMount","render","list","loading","renderValue","columnItem","listItem","index","dataIndex","icon","map","key","title","id","loadMoreCoins","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\n// import Spinner from 'react-bootstrap/Spinner';\n// import Tabs from 'react-bootstrap/Tabs'\n// import Tab from 'react-bootstrap/Tab'\n// import Container from 'react-bootstrap/Container'\nimport {Container, Tabs, Tab, Spinner} from 'react-bootstrap'\nimport { Icon } from 'antd';\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        const { list, UI } = this.props;\n        const { loading } = UI;\n        const renderValue = (columnItem, listItem, index) => {\n            switch (columnItem.dataIndex) {\n            case 'id':\n                return index + 1;\n            case 'name':\n                return <>\n                    <img src={listItem.icon} className = 'coinIcon'/>\n                    {listItem[columnItem.dataIndex]}</>\n            default : \n                return listItem[columnItem.dataIndex]\n        }\n        }\n        return (\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\n                <Tab eventKey=\"Coins\" title=\"Coins\">\n                    <div className='table'>                \n                        {columns.map(columnItem => (\n                            <div className='cols' key={columnItem.key}>\n                                <div className='colTitle'>{columnItem.title}</div>\n                                <div className = 'rows'>\n                                    {list.map((listItem, index) => <div className='rowItem' key={listItem.id}>\n                                        <Link href=\"/\">\n          <a>Home</a>\n        </Link>{renderValue(columnItem, listItem, index)}\n                                    </div>)}\n                                </div>\n                            </div>)\n                        )}\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\n                        <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"profile\" title=\"Profile\">\n                    {/* <Sonnet /> */}\n                </Tab>\n            </Tabs>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}