{"ast":null,"code":"import { toInteger, keys, cloneDeep, isArray, isEmpty } from 'lodash'; // check if value is ID: integer number > 0\n\nexport function isID(value) {\n  return Boolean(toInteger(value));\n} // filling object\n\nexport function fill(source, target, withCreatingKeys = false) {\n  const sourceKeys = keys(source);\n  const targetKeys = keys(target);\n  const result = cloneDeep(target);\n  sourceKeys.forEach(key => {\n    if (!targetKeys.includes(key) && !withCreatingKeys) {\n      return;\n    }\n\n    result[key] = source[key];\n  });\n  return result;\n}","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/helpers/utils.js"],"names":["toInteger","keys","cloneDeep","isArray","isEmpty","isID","value","Boolean","fill","source","target","withCreatingKeys","sourceKeys","targetKeys","result","forEach","key","includes"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,OAA9C,QAA6D,QAA7D,C,CAEA;;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,SAAOC,OAAO,CAACP,SAAS,CAACM,KAAD,CAAV,CAAd;AACD,C,CAED;;AACA,OAAO,SAASE,IAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,gBAAgB,GAAG,KAAjD,EAAwD;AAE7D,QAAMC,UAAU,GAAGX,IAAI,CAACQ,MAAD,CAAvB;AACA,QAAMI,UAAU,GAAGZ,IAAI,CAACS,MAAD,CAAvB;AACA,QAAMI,MAAM,GAAGZ,SAAS,CAACQ,MAAD,CAAxB;AACAE,EAAAA,UAAU,CAACG,OAAX,CAAmBC,GAAG,IAAI;AACxB,QAAI,CAACH,UAAU,CAACI,QAAX,CAAoBD,GAApB,CAAD,IAA6B,CAACL,gBAAlC,EAAoD;AAClD;AACD;;AACDG,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcP,MAAM,CAACO,GAAD,CAApB;AACD,GALD;AAMA,SAAOF,MAAP;AACD","sourcesContent":["import { toInteger, keys, cloneDeep, isArray, isEmpty } from 'lodash';\n\n// check if value is ID: integer number > 0\nexport function isID(value) {\n  return Boolean(toInteger(value));\n}\n\n// filling object\nexport function fill(source, target, withCreatingKeys = false) {\n\n  const sourceKeys = keys(source);\n  const targetKeys = keys(target);\n  const result = cloneDeep(target);\n  sourceKeys.forEach(key => {\n    if (!targetKeys.includes(key) && !withCreatingKeys) {\n      return;\n    }\n    result[key] = source[key];\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"module"}