{"ast":null,"code":"import { all, takeEvery, put, fork, call, select } from 'redux-saga/effects';\nimport actions from './actions';\nimport { coinsAPI } from '../../helpers/api/coins';\nconst messages = {\n  errorListLoad: 'Loading Coin Details list failed'\n};\n\nfunction getStoreData(state) {\n  const {\n    CoinDetails\n  } = state;\n  const UI = CoinDetails.get('UI');\n  const {\n    id\n  } = UI;\n  return {\n    id\n  };\n}\n\nfunction* dataReload() {\n  yield takeEvery(actions.BASE_DATA_RELOAD, function* (action) {\n    const {\n      id\n    } = action.data;\n    yield put(actions.uiRefresh({\n      loading: true\n    }));\n\n    try {\n      const res = yield call(coinsAPI.coinDetails, id);\n\n      if (res && res.status === 200) {\n        yield put(actions.baseDataRefrash(res.data.coin));\n      }\n\n      ;\n    } catch (error) {\n      alert(messages.errorListLoad, error);\n      console.log(error);\n    }\n\n    yield put(actions.uiRefresh({\n      loading: false\n    }));\n  });\n}\n\nexport default function* detailsSagas() {\n  yield all([fork(dataReload)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/Redux/CoinDetails/saga.js"],"names":["all","takeEvery","put","fork","call","select","actions","coinsAPI","messages","errorListLoad","getStoreData","state","CoinDetails","UI","get","id","dataReload","BASE_DATA_RELOAD","action","data","uiRefresh","loading","res","coinDetails","status","baseDataRefrash","coin","error","alert","console","log","detailsSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,oBAAxD;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,aAAa,EAAG;AADD,CAAjB;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,EAAE,GAAGD,WAAW,CAACE,GAAZ,CAAgB,IAAhB,CAAX;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASF,EAAf;AACA,SAAO;AACLE,IAAAA;AADK,GAAP;AAGD;;AAED,UAAUC,UAAV,GAAuB;AACrB,QAAMf,SAAS,CAACK,OAAO,CAACW,gBAAT,EAA2B,WAAWC,MAAX,EAAmB;AAC3D,UAAM;AAACH,MAAAA;AAAD,QAAOG,MAAM,CAACC,IAApB;AACA,UAAMjB,GAAG,CAACI,OAAO,CAACc,SAAR,CAAkB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAlB,CAAD,CAAT;;AAEA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,IAAI,CAACG,QAAQ,CAACgB,WAAV,EAAuBR,EAAvB,CAAtB;;AACA,UAAIO,GAAG,IAAIA,GAAG,CAACE,MAAJ,KAAe,GAA1B,EAA+B;AAC7B,cAAMtB,GAAG,CAACI,OAAO,CAACmB,eAAR,CAAwBH,GAAG,CAACH,IAAJ,CAASO,IAAjC,CAAD,CAAT;AACD;;AAAA;AACF,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACpB,QAAQ,CAACC,aAAV,EAAyBkB,KAAzB,CAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;;AAED,UAAMzB,GAAG,CAACI,OAAO,CAACc,SAAR,CAAkB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAlB,CAAD,CAAT;AACD,GAfc,CAAf;AAgBD;;AAED,eAAe,UAAUU,YAAV,GAAyB;AACtC,QAAM/B,GAAG,CAAC,CAACG,IAAI,CAACa,UAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, takeEvery, put, fork, call, select } from 'redux-saga/effects';\r\nimport actions from './actions';\r\n\r\nimport { coinsAPI } from '../../helpers/api/coins';\r\n\r\nconst messages = {\r\n  errorListLoad : 'Loading Coin Details list failed',\r\n};\r\n\r\nfunction getStoreData(state) {\r\n  const { CoinDetails } = state;\r\n  const UI = CoinDetails.get('UI');\r\n  const { id } = UI;\r\n  return {\r\n    id,\r\n  };\r\n}\r\n\r\nfunction* dataReload() {\r\n  yield takeEvery(actions.BASE_DATA_RELOAD, function* (action) {\r\n    const {id} = action.data\r\n    yield put(actions.uiRefresh({ loading: true }));\r\n    \r\n    try {\r\n      const res = yield call(coinsAPI.coinDetails, id);\r\n      if (res && res.status === 200) {\r\n        yield put(actions.baseDataRefrash(res.data.coin));\r\n      };\r\n    } catch (error) {\r\n      alert(messages.errorListLoad, error);\r\n      console.log(error);\r\n    }\r\n\r\n    yield put(actions.uiRefresh({ loading: false }));\r\n  });\r\n}\r\n\r\nexport default function* detailsSagas() {\r\n  yield all([fork(dataReload)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}