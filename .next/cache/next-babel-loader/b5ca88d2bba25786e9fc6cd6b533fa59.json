{"ast":null,"code":"import { toInteger, keys, cloneDeep, isArray, isEmpty } from 'lodash'; // check if value is ID: integer number > 0\n\nexport function isID(value) {\n  return Boolean(toInteger(value));\n} // filling object\n\nexport function fill(source, target) {\n  var withCreatingKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var sourceKeys = keys(source);\n  var targetKeys = keys(target);\n  var result = cloneDeep(target);\n  sourceKeys.forEach(function (key) {\n    if (!targetKeys.includes(key) && !withCreatingKeys) {\n      return;\n    }\n\n    result[key] = source[key];\n  });\n  return result;\n}\nexport var addFavoritList = function addFavoritList(id) {\n  var favorits = localStorage.getItem('favorits');\n\n  if (favorits) {\n    favorits = JSON.parse(favorits);\n  } else {\n    favorits = [];\n  }\n\n  var haveFavorits = favorits.includes(id);\n\n  if (haveFavorits) {\n    favorits = favorits.filter(function (item) {\n      return item !== id;\n    });\n  } else {\n    favorits.push(id);\n  }\n\n  localStorage.setItem('favorits', JSON.stringify(favorits));\n  return favorits;\n};\nexport var getFavoritsList = function getFavoritsList() {\n  var favorits = localStorage.getItem('favorits');\n\n  if (favorits) {\n    favorits = JSON.parse(favorits);\n  } else {\n    favorits = [];\n  }\n\n  return favorits;\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/helpers/utils.js"],"names":["toInteger","keys","cloneDeep","isArray","isEmpty","isID","value","Boolean","fill","source","target","withCreatingKeys","sourceKeys","targetKeys","result","forEach","key","includes","addFavoritList","id","favorits","localStorage","getItem","JSON","parse","haveFavorits","filter","item","push","setItem","stringify","getFavoritsList"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,OAA9C,QAA6D,QAA7D,C,CAEA;;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,SAAOC,OAAO,CAACP,SAAS,CAACM,KAAD,CAAV,CAAd;AACD,C,CAED;;AACA,OAAO,SAASE,IAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAAwD;AAAA,MAA1BC,gBAA0B,uEAAP,KAAO;AAE7D,MAAMC,UAAU,GAAGX,IAAI,CAACQ,MAAD,CAAvB;AACA,MAAMI,UAAU,GAAGZ,IAAI,CAACS,MAAD,CAAvB;AACA,MAAMI,MAAM,GAAGZ,SAAS,CAACQ,MAAD,CAAxB;AACAE,EAAAA,UAAU,CAACG,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACxB,QAAI,CAACH,UAAU,CAACI,QAAX,CAAoBD,GAApB,CAAD,IAA6B,CAACL,gBAAlC,EAAoD;AAClD;AACD;;AACDG,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcP,MAAM,CAACO,GAAD,CAApB;AACD,GALD;AAMA,SAAOF,MAAP;AACD;AAED,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;AACpC,MAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;AACA,MAAGF,QAAH,EAAa;AACXA,IAAAA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AACD,MAAMK,YAAY,GAAGL,QAAQ,CAACH,QAAT,CAAkBE,EAAlB,CAArB;;AACA,MAAIM,YAAJ,EAAkB;AAChBL,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,MAAT,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKR,EAAb;AAAA,KAApB,CAAX;AACD,GAFD,MAEO;AACLC,IAAAA,QAAQ,CAACQ,IAAT,CAAcT,EAAd;AACD;;AACDE,EAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACO,SAAL,CAAeV,QAAf,CAAjC;AACA,SAAOA,QAAP;AACD,CAfM;AAiBP,OAAO,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,MAAIX,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;AACA,MAAGF,QAAH,EAAa;AACTA,IAAAA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACH,GAFD,MAEO;AACHA,IAAAA,QAAQ,GAAG,EAAX;AACH;;AACD,SAAOA,QAAP;AACD,CARM","sourcesContent":["import { toInteger, keys, cloneDeep, isArray, isEmpty } from 'lodash';\r\n\r\n// check if value is ID: integer number > 0\r\nexport function isID(value) {\r\n  return Boolean(toInteger(value));\r\n}\r\n\r\n// filling object\r\nexport function fill(source, target, withCreatingKeys = false) {\r\n\r\n  const sourceKeys = keys(source);\r\n  const targetKeys = keys(target);\r\n  const result = cloneDeep(target);\r\n  sourceKeys.forEach(key => {\r\n    if (!targetKeys.includes(key) && !withCreatingKeys) {\r\n      return;\r\n    }\r\n    result[key] = source[key];\r\n  });\r\n  return result;\r\n}\r\n\r\nexport const addFavoritList = (id) => {\r\n  let favorits = localStorage.getItem('favorits');\r\n  if(favorits) {\r\n    favorits = JSON.parse(favorits);\r\n  } else {\r\n    favorits = []\r\n  }\r\n  const haveFavorits = favorits.includes(id);\r\n  if (haveFavorits) {\r\n    favorits = favorits.filter(item => item !== id);\r\n  } else {\r\n    favorits.push(id)\r\n  }\r\n  localStorage.setItem('favorits', JSON.stringify(favorits))\r\n  return favorits;\r\n}\r\n\r\nexport const getFavoritsList = () => {\r\n  let favorits = localStorage.getItem('favorits');\r\n  if(favorits) {\r\n      favorits = JSON.parse(favorits);\r\n  } else {\r\n      favorits = []\r\n  }\r\n  return favorits;\r\n}"]},"metadata":{},"sourceType":"module"}