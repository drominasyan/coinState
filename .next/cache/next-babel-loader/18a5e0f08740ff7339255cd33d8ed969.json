{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types'; // import Spinner from 'react-bootstrap/Spinner';\n// import Tabs from 'react-bootstrap/Tabs'\n// import Tab from 'react-bootstrap/Tab'\n// import Container from 'react-bootstrap/Container'\n\nimport { Container, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { Icon } from 'antd';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMoreCoins\", function () {\n      var _this$props = _this.props,\n          listReload = _this$props.listReload,\n          uiRefresh = _this$props.uiRefresh,\n          UI = _this$props.UI;\n      var skip = UI.skip;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var listReload = this.props.listReload;\n      listReload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          list = _this$props2.list,\n          UI = _this$props2.UI;\n      var loading = UI.loading;\n\n      var renderValue = function renderValue(columnItem, listItem, index) {\n        switch (columnItem.dataIndex) {\n          case 'id':\n            return index + 1;\n\n          case 'name':\n            return __jsx(React.Fragment, null, __jsx(\"img\", {\n              src: listItem.icon,\n              className: \"coinIcon\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }\n            }), listItem[columnItem.dataIndex]);\n\n          default:\n            return listItem[columnItem.dataIndex];\n        }\n      };\n\n      return (// <div className = 'container'>\n        __jsx(Tabs, {\n          defaultActiveKey: \"Coins\",\n          transition: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }, __jsx(Tab, {\n          eventKey: \"Coins\",\n          title: \"Coins\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: \"table\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, columns.map(function (columnItem) {\n          return __jsx(\"div\", {\n            className: \"cols\",\n            key: columnItem.key,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }\n          }, __jsx(\"div\", {\n            className: \"colTitle\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }\n          }, columnItem.title), __jsx(\"div\", {\n            className: \"rows\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }\n          }, list.map(function (listItem, index) {\n            return __jsx(\"div\", {\n              className: \"rowItem\",\n              key: listItem.id,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 72\n              }\n            }, renderValue(columnItem, listItem, index));\n          })));\n        }), loading && __jsx(Spinner, {\n          animation: \"border\",\n          variant: \"secondary\",\n          className: \"spinner\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        }), __jsx(\"button\", {\n          onClick: this.loadMoreCoins,\n          className: \"showMore\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }\n        }, \"Show More\"))), __jsx(Tab, {\n          eventKey: \"profile\",\n          title: \"Profile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        })) // </div>\n\n      );\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {}\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nvar mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","columns","PropTypes","Container","Tabs","Tab","Spinner","Icon","List","props","listReload","uiRefresh","UI","skip","list","loading","renderValue","columnItem","listItem","index","dataIndex","icon","map","key","title","id","loadMoreCoins","Component","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\n// import Spinner from 'react-bootstrap/Spinner';\n// import Tabs from 'react-bootstrap/Tabs'\n// import Tab from 'react-bootstrap/Tab'\n// import Container from 'react-bootstrap/Container'\nimport {Container, Tabs, Tab, Spinner} from 'react-bootstrap'\nimport { Icon } from 'antd';\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        const { list, UI } = this.props;\n        const { loading } = UI;\n        const renderValue = (columnItem, listItem, index) => {\n            switch (columnItem.dataIndex) {\n            case 'id':\n                return index + 1;\n            case 'name':\n                return <>\n                    <img src={listItem.icon} className = 'coinIcon'/>\n                    {listItem[columnItem.dataIndex]}</>\n            default : \n                return listItem[columnItem.dataIndex]\n        }\n        }\n        return (\n            // <div className = 'container'>\n                <Tabs defaultActiveKey=\"Coins\" transition={false}>\n                    <Tab eventKey=\"Coins\" title=\"Coins\">\n                        <div className='table'>                \n                            {columns.map(columnItem => (\n                                <div className='cols' key={columnItem.key}>\n                                    <div className='colTitle'>{columnItem.title}</div>\n                                    <div className = 'rows'>\n                                        {list.map((listItem, index) => <div className='rowItem' key={listItem.id}>\n                                            {renderValue(columnItem, listItem, index)}\n                                        </div>)}\n                                    </div>\n                                </div>)\n                            )}\n                            {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\n                            <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\n                        </div>\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Profile\">\n                        {/* <Sonnet /> */}\n                    </Tab>\n                </Tabs>\n            // </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}