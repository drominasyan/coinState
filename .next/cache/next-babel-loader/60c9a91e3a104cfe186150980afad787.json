{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(dataReload),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(detailsSagas);\n\nimport { all, takeEvery, put, fork, call, select } from 'redux-saga/effects';\nimport actions from './actions';\nimport { coinsAPI } from '../../helpers/api/coins';\nvar messages = {\n  errorListLoad: 'Loading Coin Details list failed'\n};\n\nfunction getStoreData(state) {\n  var CoinDetails = state.CoinDetails;\n  var UI = CoinDetails.get('UI');\n  var id = UI.id;\n  console.log(UI);\n  return {\n    id: id\n  };\n}\n\nfunction dataReload() {\n  return _regeneratorRuntime.wrap(function dataReload$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.BASE_DATA_RELOAD, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var _yield$select, id, res;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return put(actions.uiRefresh({\n                      loading: true\n                    }));\n\n                  case 2:\n                    _context.next = 4;\n                    return select(getStoreData);\n\n                  case 4:\n                    _yield$select = _context.sent;\n                    id = _yield$select.id;\n                    _context.prev = 6;\n                    _context.next = 9;\n                    return call(coinsAPI.coinDetails, id);\n\n                  case 9:\n                    res = _context.sent;\n\n                    if (!(res && res.status === 200)) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    _context.next = 13;\n                    return put(actions.baseDataRerash(res.data.coins));\n\n                  case 13:\n                    ;\n                    _context.next = 20;\n                    break;\n\n                  case 16:\n                    _context.prev = 16;\n                    _context.t0 = _context[\"catch\"](6);\n                    alert(messages.errorListLoad, _context.t0);\n                    console.log(_context.t0);\n\n                  case 20:\n                    _context.next = 22;\n                    return put(actions.uiRefresh({\n                      loading: false\n                    }));\n\n                  case 22:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[6, 16]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function detailsSagas() {\n  return _regeneratorRuntime.wrap(function detailsSagas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(dataReload)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/Redux/CoinDetails/saga.js"],"names":["dataReload","detailsSagas","all","takeEvery","put","fork","call","select","actions","coinsAPI","messages","errorListLoad","getStoreData","state","CoinDetails","UI","get","id","console","log","BASE_DATA_RELOAD","uiRefresh","loading","coinDetails","res","status","baseDataRerash","data","coins","alert"],"mappings":";;oDAmBUA,U;qDAmBeC,Y;;AAtCzB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,oBAAxD;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,aAAa,EAAG;AADD,CAAjB;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MACnBC,WADmB,GACHD,KADG,CACnBC,WADmB;AAE3B,MAAMC,EAAE,GAAGD,WAAW,CAACE,GAAZ,CAAgB,IAAhB,CAAX;AAF2B,MAGnBC,EAHmB,GAGZF,EAHY,CAGnBE,EAHmB;AAI3BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,SAAO;AACLE,IAAAA,EAAE,EAAFA;AADK,GAAP;AAGD;;AAED,SAAUjB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,SAAS,CAACK,OAAO,CAACY,gBAAT,wCAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACxC,2BAAMhB,GAAG,CAACI,OAAO,CAACa,SAAR,CAAkB;AAAEC,sBAAAA,OAAO,EAAE;AAAX,qBAAlB,CAAD,CAAT;;AADwC;AAAA;AAEzB,2BAAMf,MAAM,CAACK,YAAD,CAAZ;;AAFyB;AAAA;AAEhCK,oBAAAA,EAFgC,iBAEhCA,EAFgC;AAAA;AAAA;AAK1B,2BAAMX,IAAI,CAACG,QAAQ,CAACc,WAAV,EAAuBN,EAAvB,CAAV;;AAL0B;AAKhCO,oBAAAA,GALgC;;AAAA,0BAMlCA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GANY;AAAA;AAAA;AAAA;;AAAA;AAOpC,2BAAMrB,GAAG,CAACI,OAAO,CAACkB,cAAR,CAAuBF,GAAG,CAACG,IAAJ,CAASC,KAAhC,CAAD,CAAT;;AAPoC;AAQrC;AARqC;AAAA;;AAAA;AAAA;AAAA;AAUtCC,oBAAAA,KAAK,CAACnB,QAAQ,CAACC,aAAV,cAAL;AACAO,oBAAAA,OAAO,CAACC,GAAR;;AAXsC;AAAA;AAcxC,2BAAMf,GAAG,CAACI,OAAO,CAACa,SAAR,CAAkB;AAAEC,sBAAAA,OAAO,EAAE;AAAX,qBAAlB,CAAD,CAAT;;AAdwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA3B,EAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,eAAe,SAAUrB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACG,IAAI,CAACL,UAAD,CAAL,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeEvery, put, fork, call, select } from 'redux-saga/effects';\r\nimport actions from './actions';\r\n\r\nimport { coinsAPI } from '../../helpers/api/coins';\r\n\r\nconst messages = {\r\n  errorListLoad : 'Loading Coin Details list failed',\r\n};\r\n\r\nfunction getStoreData(state) {\r\n  const { CoinDetails } = state;\r\n  const UI = CoinDetails.get('UI');\r\n  const { id } = UI;\r\n  console.log(UI)\r\n  return {\r\n    id,\r\n  };\r\n}\r\n\r\nfunction* dataReload() {\r\n  yield takeEvery(actions.BASE_DATA_RELOAD, function* () {\r\n    yield put(actions.uiRefresh({ loading: true }));\r\n    const { id } = yield select(getStoreData);\r\n    \r\n    try {\r\n      const res = yield call(coinsAPI.coinDetails, id);\r\n      if (res && res.status === 200) {\r\n        yield put(actions.baseDataRerash(res.data.coins));\r\n      };\r\n    } catch (error) {\r\n      alert(messages.errorListLoad, error);\r\n      console.log(error);\r\n    }\r\n\r\n    yield put(actions.uiRefresh({ loading: false }));\r\n  });\r\n}\r\n\r\nexport default function* detailsSagas() {\r\n  yield all([fork(dataReload)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}