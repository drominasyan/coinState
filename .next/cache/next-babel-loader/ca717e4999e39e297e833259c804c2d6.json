{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst composeEnhancers = true && false && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  trace: true,\n  traceLimit: 20\n}) : compose;\nconst store = createStore(combineReducers(_objectSpread({}, reducers)), composeEnhancers(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport { store };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","createSagaMiddleware","reducers","rootSaga","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","store","run"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,cAAc,GAAIH,oBAAoB,EAA5C;AACA,MAAMI,WAAW,GAAO,CAACD,cAAD,CAAxB;AAEA,MAAME,gBAAgB,GAAI,iBAErBC,MAAM,CAACC,oCAFc,GAGpBD,MAAM,CAACC,oCAAP,CAA4C;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE;AAA3B,CAA5C,CAHoB,GAIpBV,OAJN;AAMA,MAAMW,KAAK,GAAGd,WAAW,CACvBC,eAAe,mBACVI,QADU,EADQ,EAIvBI,gBAAgB,CAACP,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAJO,CAAzB;AAOAD,cAAc,CAACQ,GAAf,CAAmBT,QAAnB;AACA,SAASQ,KAAT","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware  = createSagaMiddleware();\r\nconst middlewares     = [sagaMiddleware];\r\n\r\nconst composeEnhancers =  process.env.NODE_ENV !== 'production'\r\n  && typeof window === 'object'\r\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 20 })\r\n    : compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    ...reducers,\r\n  }),\r\n  composeEnhancers(applyMiddleware(...middlewares)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport { store };\r\n"]},"metadata":{},"sourceType":"module"}