{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../Redux/Coins/actions';\nimport { Table, Tag } from 'antd';\nimport columns from './utils';\n\nclass List extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  componentDidMount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  render() {\n    const {\n      entities\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      columns: columns,\n      dataSource: entities,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      onClick: this.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Increment\"), __jsx(\"button\", {\n      onClick: this.decrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Decrement\"), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, this.state.counter));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    entities: state.Coins.get('list')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","Table","Tag","columns","List","Component","getInitialProps","store","componentDidMount","listReload","props","render","entities","incrementCounter","decrementCounter","state","counter","mapStateToProps","Coins","get","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,MAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;;AACA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAE/B,SAAOC,eAAP,CAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAgC,CAAE;;AAElCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAe,KAAKC,KAA1B;AACAD,IAAAA,UAAU;AACb;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKF,KAAxB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,OAAO,EAAEP,OAAhB;AAAyB,MAAA,UAAU,EAAES,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWC,OAAhB,CAJJ,CADJ;AAQH;;AAnB8B;;AAsBnC,SAASC,eAAT,CAAyBF,KAAzB,EAAgC;AAE9B,SAAO;AACLH,IAAAA,QAAQ,EAAGG,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,MAAhB;AADN,GAAP;AAGD;;AACD,MAAMC,kBAAkB,GAAG;AACzBX,EAAAA,UAAU,EAAGT,YAAY,CAACS;AADD,CAA3B;AAGA,eAAeV,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../Redux/Coins/actions'\nimport { Table, Tag } from 'antd';\nimport columns from './utils'\nclass List extends React.Component {\n\n    static getInitialProps({store}) {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    render() {\n        const {entities} = this.props;\n        return (\n            <div>\n                <Table columns={columns} dataSource={entities} />\n                <button onClick={this.incrementCounter}>Increment</button>\n                <button onClick={this.decrementCounter}>Decrement</button>\n                <h1>{this.state.counter}</h1>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    entities : state.Coins.get('list')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}