{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\coinState\\\\Coins\\\\containers\\\\Coins\\\\List.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/CoinsList/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Tabs, Tab, Spinner } from 'react-bootstrap';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"listenToScroll\", function () {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        _this.loadMoreCoins();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMoreCoins\", function () {\n      var _this$props = _this.props,\n          listReload = _this$props.listReload,\n          uiRefresh = _this$props.uiRefresh,\n          UI = _this$props.UI;\n      var skip = UI.skip;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.listenToScroll);\n      var _this$props2 = this.props,\n          listReload = _this$props2.listReload,\n          uiRefresh = _this$props2.uiRefresh;\n\n      if (favorits) {\n        favorits = JSON.parse(favorits);\n      } else {\n        favorits = [];\n      }\n\n      uiRefresh({\n        favorits: favorits\n      });\n      listReload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          list = _this$props3.list,\n          UI = _this$props3.UI;\n      var loading = UI.loading;\n      return __jsx(Tabs, {\n        defaultActiveKey: \"Coins\",\n        transition: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, __jsx(Tab, {\n        eventKey: \"Coins\",\n        title: \"Coins\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, columns.map(function (columnItem) {\n        return __jsx(\"div\", {\n          className: \"cols\",\n          key: columnItem.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: \"colTitle\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }\n        }, columnItem.title), __jsx(\"div\", {\n          className: \"rows\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }\n        }, list.map(function (listItem, index) {\n          return __jsx(\"div\", {\n            className: \"rowItem\",\n            key: listItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 68\n            }\n          }, renderValue(columnItem, listItem, index));\n        })));\n      }), loading && __jsx(Spinner, {\n        animation: \"border\",\n        variant: \"secondary\",\n        className: \"spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }), __jsx(\"button\", {\n        onClick: this.loadMoreCoins,\n        className: \"showMore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"Show More\"))), __jsx(Tab, {\n        eventKey: \"favorites\",\n        title: \"Favorites\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, columns.map(function (columnItem) {\n        return __jsx(\"div\", {\n          className: \"cols\",\n          key: columnItem.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: \"colTitle\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }\n        }, columnItem.title), __jsx(\"div\", {\n          className: \"rows\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }\n        }, list.map(function (listItem, index) {\n          return __jsx(\"div\", {\n            className: \"rowItem\",\n            key: listItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 68\n            }\n          }, renderValue(columnItem, listItem, index));\n        })));\n      }), loading && __jsx(Spinner, {\n        animation: \"border\",\n        variant: \"secondary\",\n        className: \"spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }), __jsx(\"button\", {\n        onClick: this.loadMoreCoins,\n        className: \"showMore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, \"Show More\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {}\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nvar mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","columns","PropTypes","Link","Tabs","Tab","Spinner","List","window","innerHeight","document","documentElement","scrollTop","offsetHeight","loadMoreCoins","props","listReload","uiRefresh","UI","skip","addEventListener","listenToScroll","favorits","JSON","parse","list","loading","map","columnItem","key","title","listItem","index","id","renderValue","Component","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport coinsActions from '../../Redux/CoinsList/actions'\r\nimport {columns} from './utils'\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link'\r\nimport { Tabs, Tab, Spinner} from 'react-bootstrap'\r\nclass List extends React.Component {\r\n\r\n    static propTypes = {\r\n        list        : PropTypes.array.isRequired,\r\n        UI          : PropTypes.object.isRequired,\r\n        listReload  : PropTypes.func.isRequired,\r\n        uiRefresh   : PropTypes.func.isRequired,\r\n    }\r\n\r\n    static getInitialProps() {}\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('scroll', this.listenToScroll);\r\n        const {listReload, uiRefresh} = this.props;\r\n        if(favorits) {\r\n            favorits = JSON.parse(favorits);\r\n        } else {\r\n            favorits = []\r\n        }\r\n        uiRefresh({favorits})\r\n        listReload();\r\n    }\r\n\r\n    listenToScroll = () => {\r\n        if(window.innerHeight + document.documentElement.scrollTop\r\n            === document.documentElement.offsetHeight) {\r\n                this.loadMoreCoins();\r\n        }\r\n      }\r\n\r\n    loadMoreCoins = () => {\r\n        const { listReload, uiRefresh, UI } = this.props;\r\n        const { skip } = UI;\r\n        uiRefresh({\r\n            skip : skip + 1, \r\n        })\r\n        listReload();\r\n    }\r\n\r\n    render() {\r\n        const { list, UI } = this.props;\r\n        const { loading } = UI;\r\n        \r\n        return (\r\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\r\n                <Tab eventKey=\"Coins\" title=\"Coins\">\r\n                    <div className='table'>                \r\n                        {columns.map(columnItem => (\r\n                            <div className='cols' key={columnItem.key}>\r\n                                <div className='colTitle'>{columnItem.title}</div>\r\n                                <div className = 'rows'>\r\n                                    {list.map((listItem, index) => <div className='rowItem' key={listItem.id}>\r\n                                        {renderValue(columnItem, listItem, index)}\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>)\r\n                        )}\r\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\r\n                        <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\r\n                    </div>\r\n                </Tab>\r\n                <Tab eventKey=\"favorites\" title=\"Favorites\">\r\n                <div className='table'>                \r\n                        {columns.map(columnItem => (\r\n                            <div className='cols' key={columnItem.key}>\r\n                                <div className='colTitle'>{columnItem.title}</div>\r\n                                <div className = 'rows'>\r\n                                    {list.map((listItem, index) => <div className='rowItem' key={listItem.id}>\r\n                                        {renderValue(columnItem, listItem, index)}\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>)\r\n                        )}\r\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\r\n                        <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  \r\n  return {\r\n    list    : state.Coins.get('list'),\r\n    UI : state.Coins.get('UI')\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  listReload : coinsActions.listReload,\r\n  uiRefresh  : coinsActions.uiRefresh,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}