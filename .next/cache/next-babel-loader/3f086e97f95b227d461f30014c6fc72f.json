{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport Spinner from 'react-bootstrap/Spinner';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMoreCoins\", function () {\n      var _this$props = _this.props,\n          listReload = _this$props.listReload,\n          uiRefresh = _this$props.uiRefresh,\n          UI = _this$props.UI;\n      var skip = UI.skip;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var listReload = this.props.listReload;\n      listReload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          list = _this$props2.list,\n          UI = _this$props2.UI;\n      var loading = UI.loading;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, columns.map(function (item) {\n        return __jsx(\"div\", {\n          className: \"cols\",\n          key: item.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, __jsx(\"div\", {\n          className: \"colTitle\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }\n        }, item.title), __jsx(\"div\", {\n          className: \"rows\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }\n        }, list.map(function (listItem) {\n          return __jsx(\"div\", {\n            className: \"rowItem\",\n            key: listItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 55\n            }\n          }, listItem[item.dataIndex]);\n        })));\n      }), __jsx(Spin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      })), __jsx(\"button\", {\n        onClick: this.loadMoreCoins,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, \"Show More\"), __jsx(Spinner, {\n        animation: \"border\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {}\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    UI: state.Coins.get('UI')\n  };\n}\n\nvar mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","columns","PropTypes","Spinner","List","props","listReload","uiRefresh","UI","skip","list","loading","map","item","key","title","listItem","id","dataIndex","loadMoreCoins","Component","array","isRequired","object","func","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\nimport Spinner from 'react-bootstrap/Spinner'\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        UI          : PropTypes.object.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps() {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const { listReload, uiRefresh, UI } = this.props;\n        const { skip } = UI;\n        uiRefresh({\n            skip : skip + 1, \n        })\n        listReload();\n    }\n\n    render() {\n        const { list, UI } = this.props;\n        const { loading } = UI;\n        return (\n            <>\n                <div className='table'>                \n                    {/* <Table columns={columns} dataSource={list} pagination = {false} loading={loading}/> */}\n                    {columns.map(item => (\n                        <div className='cols' key={item.key}>\n                            <div className='colTitle'>{item.title}</div>\n                            <div className = 'rows'>\n                                {list.map(listItem => <div className='rowItem' key={listItem.id}>\n                                    {listItem[item.dataIndex]}\n                                </div>)}\n                            </div>\n                        </div>)\n                    )}\n                    <Spin />\n                </div>\n                <button onClick={this.loadMoreCoins}>Show More</button>\n                <Spinner animation=\"border\" variant=\"secondary\" />\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    UI : state.Coins.get('UI')\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}