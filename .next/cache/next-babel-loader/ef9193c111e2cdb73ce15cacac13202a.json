{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\coinState\\\\Coins\\\\containers\\\\Coins\\\\List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/CoinsList/actions';\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { starFull } from 'react-icons-kit/icomoon/starFull';\nimport { Icon } from 'react-icons-kit';\nimport { Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { addFavoritList } from '../../helpers/utils';\nimport ListTable from '../../Components/ListTable';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"listenToScroll\", () => {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        this.loadMoreCoins();\n      }\n    });\n\n    _defineProperty(this, \"loadMoreCoins\", () => {\n      const {\n        listReload,\n        uiRefresh,\n        UI\n      } = this.props;\n      const {\n        skip\n      } = UI;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n\n    _defineProperty(this, \"renderValue\", (columnItem, listItem, index) => {\n      const {\n        UI\n      } = this.props;\n      const {\n        loading,\n        favorits\n      } = UI;\n      let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\n\n      switch (columnItem.dataIndex) {\n        case 'id':\n          return index + 1;\n\n        case 'name':\n          return __jsx(React.Fragment, null, __jsx(\"div\", {\n            className: `starList ${liked}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }\n          }, __jsx(Icon, {\n            icon: starFull,\n            size: 20,\n            onClick: () => this.addFavoritList(listItem.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }\n          })), __jsx(Link, {\n            href: `/coins/${listItem.id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }\n          }, __jsx(\"a\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }\n          }, __jsx(\"img\", {\n            src: listItem.icon,\n            className: \"coinIcon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }\n          }), listItem[columnItem.dataIndex])));\n\n        default:\n          return listItem[columnItem.dataIndex];\n      }\n    });\n\n    _defineProperty(this, \"addFavoritList\", id => {\n      const {\n        uiRefresh\n      } = this.props;\n      const favorits = addFavoritList(id);\n      uiRefresh({\n        favorits\n      });\n    });\n  }\n\n  static getInitialProps() {}\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n    const {\n      listReload,\n      uiRefresh\n    } = this.props;\n    let favorits = localStorage.getItem('favorits');\n\n    if (favorits) {\n      favorits = JSON.parse(favorits);\n    } else {\n      favorits = [];\n    }\n\n    uiRefresh({\n      favorits\n    });\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      UI,\n      detailsUI\n    } = this.props;\n    const {\n      loading,\n      favorits\n    } = UI;\n    const favoritsList = list.filter(item => favorits.includes(item.id)); // console.log(favoritsList);\n\n    return __jsx(Tabs, {\n      defaultActiveKey: \"Coins\",\n      transition: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, __jsx(Tab, {\n      eventKey: \"Coins\",\n      title: \"Coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, columns.map((columnItem, index) => __jsx(\"div\", {\n      className: \"cols\",\n      key: `${columnItem.key}_${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"colTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, columnItem.title), __jsx(\"div\", {\n      className: \"rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, list.map((listItem, index) => __jsx(\"div\", {\n      className: \"rowItem\",\n      key: `${listItem.id}_${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 68\n      }\n    }, this.renderValue(columnItem, listItem, index)))))), loading && __jsx(Spinner, {\n      animation: \"border\",\n      variant: \"secondary\",\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }), __jsx(\"button\", {\n      onClick: this.loadMoreCoins,\n      className: \"showMore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Show More\"))), __jsx(Tab, {\n      eventKey: \"favorites\",\n      title: \"Favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, columns.map(columnItem => __jsx(\"div\", {\n      className: \"cols\",\n      key: columnItem.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"colTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, columnItem.title), __jsx(\"div\", {\n      className: \"rows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, favoritsList.map((listItem, index) => __jsx(\"div\", {\n      className: \"rowItem\",\n      key: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 76\n      }\n    }, this.renderValue(columnItem, listItem, index)))))), loading && __jsx(Spinner, {\n      animation: \"border\",\n      variant: \"secondary\",\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  detailsUI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  const {\n    Coins,\n    CoinDetails\n  } = state;\n  return {\n    list: Coins.get('list'),\n    UI: Coins.get('UI'),\n    detailsUI: CoinDetails.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh,\n  uiDetailsRefresh: coinsDetailsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","coinsDetailsActions","columns","PropTypes","Link","starFull","Icon","Tabs","Tab","Spinner","addFavoritList","ListTable","List","Component","window","innerHeight","document","documentElement","scrollTop","offsetHeight","loadMoreCoins","listReload","uiRefresh","UI","props","skip","columnItem","listItem","index","loading","favorits","liked","includes","id","dataIndex","icon","getInitialProps","componentDidMount","addEventListener","listenToScroll","localStorage","getItem","JSON","parse","render","list","detailsUI","favoritsList","filter","item","map","key","title","renderValue","array","isRequired","object","func","mapStateToProps","state","Coins","CoinDetails","get","mapDispatchToProps","uiDetailsRefresh"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport coinsActions from '../../Redux/CoinsList/actions'\r\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions'\r\nimport {columns} from './utils'\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link'\r\nimport {starFull} from 'react-icons-kit/icomoon/starFull'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { Tabs, Tab, Spinner} from 'react-bootstrap'\r\nimport {addFavoritList} from '../../helpers/utils'\r\nimport ListTable from '../../Components/ListTable'\r\n\r\nclass List extends React.Component {\r\n\r\n    static propTypes = {\r\n        list        : PropTypes.array.isRequired,\r\n        UI          : PropTypes.object.isRequired,\r\n        detailsUI   : PropTypes.object.isRequired,\r\n        listReload  : PropTypes.func.isRequired,\r\n        uiRefresh   : PropTypes.func.isRequired,\r\n    }\r\n\r\n    static getInitialProps() {}\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('scroll', this.listenToScroll);\r\n        const {listReload, uiRefresh} = this.props;\r\n        let favorits = localStorage.getItem('favorits');\r\n        if(favorits) {\r\n            favorits = JSON.parse(favorits);\r\n        } else {\r\n            favorits = []\r\n        }\r\n        uiRefresh({favorits})\r\n        listReload();\r\n    }\r\n\r\n    listenToScroll = () => {\r\n        if(window.innerHeight + document.documentElement.scrollTop\r\n            === document.documentElement.offsetHeight) {\r\n                this.loadMoreCoins();\r\n        }\r\n      }\r\n\r\n    loadMoreCoins = () => {\r\n        const { listReload, uiRefresh, UI } = this.props;\r\n        const { skip } = UI;\r\n        uiRefresh({\r\n            skip : skip + 1, \r\n        })\r\n        listReload();\r\n    }\r\n    renderValue = (columnItem, listItem, index) => {\r\n        const {UI} = this.props;\r\n        const { loading, favorits } = UI;\r\n        let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\r\n        switch (columnItem.dataIndex) {\r\n            case 'id':\r\n                return index + 1;\r\n            case 'name':\r\n                return <>\r\n                            <div className = {`starList ${liked}`}>\r\n                                <Icon icon={starFull} size={20} onClick={() =>this.addFavoritList(listItem.id)}/>\r\n                            </div>\r\n                            <Link href={`/coins/${listItem.id}`}>\r\n                                <a>\r\n                                    <img src={listItem.icon} className = 'coinIcon'/>\r\n                                    {listItem[columnItem.dataIndex]}\r\n                                </a>\r\n                            </Link>\r\n                        </>\r\n            default : \r\n            return listItem[columnItem.dataIndex]\r\n        }\r\n    }\r\n\r\n    addFavoritList = (id) => {\r\n        const { uiRefresh} = this.props;\r\n        const favorits = addFavoritList(id);\r\n        uiRefresh ({favorits});\r\n    }\r\n\r\n    render() {\r\n        const { list, UI, detailsUI } = this.props;\r\n        const { loading, favorits } = UI;\r\n        const favoritsList = list.filter(item => favorits.includes(item.id));\r\n        // console.log(favoritsList);\r\n        return (\r\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\r\n                <Tab eventKey=\"Coins\" title=\"Coins\">\r\n                    <div className='table'>                \r\n                        {columns.map((columnItem, index) => (\r\n                            <div className='cols' key={`${columnItem.key}_${index}`}>\r\n                                <div className='colTitle'>{columnItem.title}</div>\r\n                                <div className = 'rows'>\r\n                                    {list.map((listItem, index) => <div className='rowItem' key={`${listItem.id}_${index}`}>\r\n                                        {this.renderValue(columnItem, listItem, index)}\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>)\r\n                        )}\r\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\r\n                        <button onClick={this.loadMoreCoins} className='showMore'>Show More</button>\r\n                    </div>\r\n                </Tab>\r\n                <Tab eventKey=\"favorites\" title=\"Favorites\">\r\n                    <div className='table'>                \r\n                        {columns.map(columnItem => (\r\n                            <div className='cols' key={columnItem.key}>\r\n                                <div className='colTitle'>{columnItem.title}</div>\r\n                                <div className = 'rows'>\r\n                                    {favoritsList.map((listItem, index) => <div className='rowItem' key={listItem.id}>\r\n                                        {this.renderValue(columnItem, listItem, index)}\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>)\r\n                        )}\r\n                        {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { Coins, CoinDetails } = state;\r\n  return {\r\n    list  : Coins.get('list'),\r\n    UI    : Coins.get('UI'),\r\n    detailsUI    : CoinDetails.get('UI'),\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  listReload : coinsActions.listReload,\r\n  uiRefresh  : coinsActions.uiRefresh,\r\n  uiDetailsRefresh  : coinsDetailsActions.uiRefresh,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}