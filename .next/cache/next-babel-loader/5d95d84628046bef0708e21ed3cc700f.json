{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/Desktop/CoinState/Coins/containers/Coins/List.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions';\nimport { Table, Tag } from 'antd';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\n\nvar List = /*#__PURE__*/function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  var _super = _createSuper(List);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadMoreCoins\", function () {\n      var listReload = _this.props.listReload;\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var listReload = this.props.listReload;\n      listReload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          list = _this$props.list,\n          loading = _this$props.loading;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, columns.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"cols\",\n          key: item.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, __jsx(\"div\", {\n          className: \"colTitle\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }\n        }, item.title), __jsx(\"div\", {\n          className: \"rows\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        }, list.map(function (listItem) {\n          return __jsx(\"div\", {\n            className: \"rowItem\",\n            key: listItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 55\n            }\n          }, listItem[item.dataIndex]);\n        })));\n      })), __jsx(\"button\", {\n        onClick: this.loadMoreCoins,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"Show More\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.Coins.get('list'),\n    loading: state.Coins.get('UI').loading\n  };\n}\n\nvar mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","Table","Tag","columns","PropTypes","List","listReload","props","list","loading","map","item","index","key","title","listItem","id","dataIndex","loadMoreCoins","store","Component","array","isRequired","bool","func","uiRefresh","mapStateToProps","state","Coins","get","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,MAA3B;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,I;;;;;;;;;;;;;;;;oEAgBc,YAAM;AAAA,UACXC,UADW,GACG,MAAKC,KADR,CACXD,UADW;AAErB,K;;;;;;;wCAPkB;AAAA,UACRA,UADQ,GACM,KAAKC,KADX,CACRD,UADQ;AAEfA,MAAAA,UAAU;AACb;;;6BAMQ;AAAA;;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,OADR,eACQA,OADR;AAEL,aACI,4BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKN,OAAO,CAACO,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,eACT;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAED,IAAI,CAACE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BF,IAAI,CAACG,KAAhC,CADJ,EAEI;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKN,IAAI,CAACE,GAAL,CAAS,UAAAK,QAAQ;AAAA,iBAAI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,GAAG,EAAEA,QAAQ,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4CD,QAAQ,CAACJ,IAAI,CAACM,SAAN,CAApD,CAAJ;AAAA,SAAjB,CADL,CAFJ,CADS;AAAA,OAAZ,CAFL,CADJ,EAYI;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,CADJ;AAgBH;;;0CA7B+B;AAAA,UAARC,KAAQ,QAARA,KAAQ;AAAE;;;;EATnBrB,KAAK,CAACsB,S;;gBAAnBf,I,eAEiB;AACfG,EAAAA,IAAI,EAAUJ,SAAS,CAACiB,KAAV,CAAgBC,UADf;AAEfb,EAAAA,OAAO,EAAOL,SAAS,CAACmB,IAAV,CAAeD,UAFd;AAGfhB,EAAAA,UAAU,EAAIF,SAAS,CAACoB,IAAV,CAAeF,UAHd;AAIfG,EAAAA,SAAS,EAAKrB,SAAS,CAACoB,IAAV,CAAeF;AAJd,C;;AAuCvB,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAO;AACLnB,IAAAA,IAAI,EAAMmB,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CADL;AAELpB,IAAAA,OAAO,EAAGkB,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,IAAhB,EAAsBpB;AAF3B,GAAP;AAID;;AACD,IAAMqB,kBAAkB,GAAG;AACzBxB,EAAAA,UAAU,EAAGN,YAAY,CAACM,UADD;AAEzBmB,EAAAA,SAAS,EAAIzB,YAAY,CAACyB;AAFD,CAA3B;AAIA,eAAe1B,OAAO,CAAC2B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CzB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/Coins/actions'\nimport { Table, Tag } from 'antd';\nimport {columns} from './utils'\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n\n    static propTypes = {\n        list        : PropTypes.array.isRequired,\n        loading     : PropTypes.bool.isRequired,\n        listReload  : PropTypes.func.isRequired,\n        uiRefresh   : PropTypes.func.isRequired,\n    }\n\n    static getInitialProps({store}) {}\n\n    componentDidMount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    loadMoreCoins = () => {\n        const {listReload} = this.props;\n    }\n\n    render() {\n        const {list, loading} = this.props;\n        return (\n            <>\n                <div className='table'>                \n                    {/* <Table columns={columns} dataSource={list} pagination = {false} loading={loading}/> */}\n                    {columns.map((item, index) => (\n                        <div className='cols' key={item.key}>\n                            <div className='colTitle'>{item.title}</div>\n                            <div className = 'rows'>\n                                {list.map(listItem => <div className='rowItem' key={listItem.id}>{listItem[item.dataIndex]}</div>)}\n                            </div>\n                        </div>)\n                    )}\n                </div>\n                <button onClick={this.loadMoreCoins}>Show More</button>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  \n  return {\n    list    : state.Coins.get('list'),\n    loading : state.Coins.get('UI').loading\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n  uiRefresh  : coinsActions.uiRefresh,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}