{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\coinState\\\\Coins\\\\Components\\\\ListTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { starFull } from 'react-icons-kit/icomoon/starFull';\nimport { Icon } from 'react-icons-kit';\nimport { Spinner } from 'react-bootstrap';\nimport { addFavoritList } from '../';\n\nconst ListTable = props => {\n  // const addFavoritList = (id) => {\n  //     const { uiRefresh} = props;\n  //     addFavoritList(id);\n  //     // uiRefresh ({favorits});\n  // }\n  const renderValue = (columnItem, listItem, index) => {\n    const {\n      UI,\n      favorits,\n      updateFavorits\n    } = props;\n    let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\n\n    switch (columnItem.dataIndex) {\n      case 'id':\n        return index + 1;\n\n      case 'name':\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: `starList ${liked}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }\n        }, __jsx(Icon, {\n          icon: starFull,\n          size: 20,\n          onClick: () => updateFavorits(listItem.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        })), __jsx(Link, {\n          href: `/coins/${listItem.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }\n        }, __jsx(\"img\", {\n          src: listItem.icon,\n          className: \"coinIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }\n        }), listItem[columnItem.dataIndex])));\n\n      default:\n        return listItem[columnItem.dataIndex];\n    }\n  };\n\n  const {\n    columns,\n    list,\n    UI\n  } = props;\n  const {\n    loading\n  } = UI;\n  return __jsx(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, columns.map((columnItem, index) => __jsx(\"div\", {\n    className: \"cols\",\n    key: `${columnItem.key}_${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"colTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, columnItem.title), __jsx(\"div\", {\n    className: \"rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, list.map((listItem, index) => __jsx(\"div\", {\n    className: \"rowItem\",\n    key: `${listItem.id}_${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 60\n    }\n  }, renderValue(columnItem, listItem, index)))))), loading && __jsx(Spinner, {\n    animation: \"border\",\n    variant: \"secondary\",\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default React.memo(ListTable);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/Components/ListTable.js"],"names":["React","Link","starFull","Icon","Spinner","addFavoritList","ListTable","props","renderValue","columnItem","listItem","index","UI","favorits","updateFavorits","liked","includes","id","dataIndex","icon","columns","list","loading","map","key","title","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link'\r\nimport {starFull} from 'react-icons-kit/icomoon/starFull'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { Spinner} from 'react-bootstrap'\r\nimport {addFavoritList} from '../'\r\n\r\nconst  ListTable = (props) => {\r\n\r\n    // const addFavoritList = (id) => {\r\n    //     const { uiRefresh} = props;\r\n    //     addFavoritList(id);\r\n    //     // uiRefresh ({favorits});\r\n    // }\r\n    \r\n    const renderValue = (columnItem, listItem, index) => {\r\n        const {UI, favorits, updateFavorits} = props;\r\n        let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\r\n        switch (columnItem.dataIndex) {\r\n            case 'id':\r\n                return index + 1;\r\n            case 'name':\r\n                return <>\r\n                            <div className = {`starList ${liked}`}>\r\n                                <Icon icon={starFull} size={20} onClick={() =>updateFavorits(listItem.id)}/>\r\n                            </div>\r\n                            <Link href={`/coins/${listItem.id}`}>\r\n                                <a>\r\n                                    <img src={listItem.icon} className = 'coinIcon'/>\r\n                                    {listItem[columnItem.dataIndex]}\r\n                                </a>\r\n                            </Link>\r\n                        </>\r\n            default : \r\n            return listItem[columnItem.dataIndex]\r\n        }\r\n    }\r\n\r\n    const { columns,  list, UI} = props;\r\n    const { loading } = UI;\r\n    return <div className='table'>\r\n                {columns.map((columnItem, index) => (\r\n                    <div className='cols' key={`${columnItem.key}_${index}`}>\r\n                        <div className='colTitle'>{columnItem.title}</div>\r\n                        <div className = 'rows'>\r\n                            {list.map((listItem, index) => <div className='rowItem' key={`${listItem.id}_${index}`}>\r\n                                {renderValue(columnItem, listItem, index)}\r\n                            </div>)}\r\n                        </div>\r\n                    </div>)\r\n                )}\r\n            {loading && <Spinner animation=\"border\" variant=\"secondary\" className='spinner'/>}\r\n        </div>\r\n}\r\n\r\n\r\nexport default React.memo(ListTable);"]},"metadata":{},"sourceType":"module"}