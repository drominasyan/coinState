{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\coinState\\\\Coins\\\\containers\\\\Coins\\\\List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/CoinsList/actions';\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport ListTable from '../../Components/ListTable';\n\nclass List extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"loadMoreCoins\", () => {\n      const {\n        listReload,\n        uiRefresh,\n        UI\n      } = this.props;\n      const {\n        skip\n      } = UI;\n      uiRefresh({\n        skip: skip + 1\n      });\n      listReload();\n    });\n\n    _defineProperty(this, \"listenToScroll\", () => {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        this.loadMoreCoins();\n      }\n    });\n\n    this.state = {\n      favorits: []\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n    const {\n      listReload,\n      uiRefresh\n    } = this.props;\n    let favorits = localStorage.getItem('favorits');\n\n    if (favorits) {\n      favorits = JSON.parse(favorits);\n    } else {\n      favorits = [];\n    }\n\n    this.setState({\n      favorits\n    }); // uiRefresh({favorits})\n\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      UI,\n      uiRefresh,\n      listReload\n    } = this.props;\n    const {\n      favorits\n    } = this.state;\n    const favoritsList = list.filter(item => favorits.includes(item.id));\n    return __jsx(Tabs, {\n      defaultActiveKey: \"Coins\",\n      transition: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Tab, {\n      eventKey: \"Coins\",\n      title: \"Coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, __jsx(ListTable, {\n      columns: columns,\n      list: list,\n      UI: UI,\n      listReload: listReload,\n      uiRefresh: uiRefresh,\n      showMore: true,\n      favorits: favorits,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })), __jsx(Tab, {\n      eventKey: \"favorites\",\n      title: \"Favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(ListTable, {\n      columns: columns,\n      list: favoritsList,\n      UI: UI,\n      listReload: listReload,\n      showMore: false,\n      favorits: favorits,\n      uiRefresh: uiRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  detailsUI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  const {\n    Coins,\n    CoinDetails\n  } = state;\n  return {\n    list: Coins.get('list'),\n    UI: Coins.get('UI'),\n    detailsUI: CoinDetails.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh,\n  uiDetailsRefresh: coinsDetailsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","coinsDetailsActions","columns","PropTypes","Tabs","Tab","ListTable","List","Component","constructor","listReload","uiRefresh","UI","props","skip","window","innerHeight","document","documentElement","scrollTop","offsetHeight","loadMoreCoins","state","favorits","componentDidMount","addEventListener","listenToScroll","localStorage","getItem","JSON","parse","setState","render","list","favoritsList","filter","item","includes","id","array","isRequired","object","detailsUI","func","mapStateToProps","Coins","CoinDetails","get","mapDispatchToProps","uiDetailsRefresh"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport coinsActions from '../../Redux/CoinsList/actions'\r\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions'\r\nimport {columns} from './utils'\r\nimport PropTypes from 'prop-types';\r\nimport { Tabs, Tab} from 'react-bootstrap'\r\nimport ListTable from '../../Components/ListTable'\r\n\r\nclass List extends React.Component {\r\n\r\n    static propTypes = {\r\n        list        : PropTypes.array.isRequired,\r\n        UI          : PropTypes.object.isRequired,\r\n        detailsUI   : PropTypes.object.isRequired,\r\n        listReload  : PropTypes.func.isRequired,\r\n        uiRefresh   : PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor() { \r\n        super()\r\n        this.state = {\r\n            favorits: [],\r\n        };\r\n      }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('scroll', this.listenToScroll);\r\n        const {listReload, uiRefresh} = this.props;\r\n        let favorits = localStorage.getItem('favorits');\r\n        if(favorits) {\r\n            favorits = JSON.parse(favorits);\r\n        } else {    \r\n            favorits = []\r\n        }\r\n        this.setState({favorits})\r\n        // uiRefresh({favorits})\r\n        listReload();\r\n    }\r\n\r\n    loadMoreCoins = () => {\r\n        const { listReload, uiRefresh, UI } = this.props;\r\n        const { skip } = UI;\r\n        uiRefresh({\r\n            skip : skip + 1, \r\n        })\r\n        listReload();\r\n    }\r\n\r\n    listenToScroll = () => {\r\n        if(window.innerHeight + document.documentElement.scrollTop\r\n            === document.documentElement.offsetHeight) {\r\n                this.loadMoreCoins();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { list, UI, uiRefresh, listReload } = this.props;\r\n        const { favorits } = this.state;\r\n        const favoritsList = list.filter(item => favorits.includes(item.id));\r\n        return (\r\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\r\n                <Tab eventKey=\"Coins\" title=\"Coins\">\r\n                    <ListTable \r\n                        columns={columns}\r\n                        list={list}\r\n                        UI={UI}\r\n                        listReload={listReload}\r\n                        uiRefresh={uiRefresh}\r\n                        showMore = {true}\r\n                        favorits={favorits}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"favorites\" title=\"Favorites\">\r\n                    <ListTable \r\n                        columns={columns}\r\n                        list={favoritsList}\r\n                        UI={UI}\r\n                        listReload={listReload}\r\n                        showMore = {false}\r\n                        favorits={favorits}\r\n\r\n                        uiRefresh={uiRefresh}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { Coins, CoinDetails } = state;\r\n  return {\r\n    list  : Coins.get('list'),\r\n    UI    : Coins.get('UI'),\r\n    detailsUI : CoinDetails.get('UI'),\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  listReload : coinsActions.listReload,\r\n  uiRefresh  : coinsActions.uiRefresh,\r\n  uiDetailsRefresh  : coinsDetailsActions.uiRefresh,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}