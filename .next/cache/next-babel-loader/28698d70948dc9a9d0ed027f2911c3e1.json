{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\coinState\\\\Coins\\\\containers\\\\Coins\\\\List.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../../Redux/CoinsList/actions';\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions';\nimport { columns } from './utils';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { starFull } from 'react-icons-kit/icomoon/starFull';\nimport { Icon } from 'react-icons-kit';\nimport { Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { addFavoritList } from '../../helpers/utils';\nimport ListTable from '../../Components/ListTable';\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"listenToScroll\", () => {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        this.loadMoreCoins();\n      }\n    });\n\n    _defineProperty(this, \"renderValue\", (columnItem, listItem, index) => {\n      const {\n        UI\n      } = this.props;\n      const {\n        favorits\n      } = UI;\n      let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\n\n      switch (columnItem.dataIndex) {\n        case 'id':\n          return index + 1;\n\n        case 'name':\n          return __jsx(React.Fragment, null, __jsx(\"div\", {\n            className: `starList ${liked}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }\n          }, __jsx(Icon, {\n            icon: starFull,\n            size: 20,\n            onClick: () => this.addFavoritList(listItem.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }\n          })), __jsx(Link, {\n            href: `/coins/${listItem.id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }\n          }, __jsx(\"a\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }\n          }, __jsx(\"img\", {\n            src: listItem.icon,\n            className: \"coinIcon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }\n          }), listItem[columnItem.dataIndex])));\n\n        default:\n          return listItem[columnItem.dataIndex];\n      }\n    });\n\n    _defineProperty(this, \"addFavoritList\", id => {\n      const {\n        uiRefresh\n      } = this.props;\n      const favorits = addFavoritList(id);\n      uiRefresh({\n        favorits\n      });\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n    const {\n      listReload,\n      uiRefresh\n    } = this.props;\n    let favorits = localStorage.getItem('favorits');\n\n    if (favorits) {\n      favorits = JSON.parse(favorits);\n    } else {\n      favorits = [];\n    }\n\n    uiRefresh({\n      favorits\n    });\n    listReload();\n  }\n\n  render() {\n    const {\n      list,\n      UI,\n      detailsUI,\n      uiRefresh,\n      listReload\n    } = this.props;\n    const {\n      loading,\n      favorits\n    } = UI;\n    const favoritsList = list.filter(item => favorits.includes(item.id));\n    return __jsx(Tabs, {\n      defaultActiveKey: \"Coins\",\n      transition: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(Tab, {\n      eventKey: \"Coins\",\n      title: \"Coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, __jsx(ListTable, {\n      columns: columns,\n      list: list,\n      UI: UI,\n      listReload: listReload,\n      uiRefresh: uiRefresh,\n      showMore: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), __jsx(Tab, {\n      eventKey: \"favorites\",\n      title: \"Favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, __jsx(ListTable, {\n      columns: columns,\n      list: favoritsList,\n      UI: UI,\n      listReload: listReload,\n      showMore: false,\n      uiRefresh: uiRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n_defineProperty(List, \"propTypes\", {\n  list: PropTypes.array.isRequired,\n  UI: PropTypes.object.isRequired,\n  detailsUI: PropTypes.object.isRequired,\n  listReload: PropTypes.func.isRequired,\n  uiRefresh: PropTypes.func.isRequired\n});\n\nfunction mapStateToProps(state) {\n  const {\n    Coins,\n    CoinDetails\n  } = state;\n  return {\n    list: Coins.get('list'),\n    UI: Coins.get('UI'),\n    detailsUI: CoinDetails.get('UI')\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload,\n  uiRefresh: coinsActions.uiRefresh,\n  uiDetailsRefresh: coinsDetailsActions.uiRefresh\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/coinState/Coins/containers/Coins/List.js"],"names":["React","connect","coinsActions","coinsDetailsActions","columns","PropTypes","Link","starFull","Icon","Tabs","Tab","Spinner","addFavoritList","ListTable","List","Component","window","innerHeight","document","documentElement","scrollTop","offsetHeight","loadMoreCoins","columnItem","listItem","index","UI","props","favorits","liked","includes","id","dataIndex","icon","uiRefresh","componentDidMount","addEventListener","listenToScroll","listReload","localStorage","getItem","JSON","parse","render","list","detailsUI","loading","favoritsList","filter","item","array","isRequired","object","func","mapStateToProps","state","Coins","CoinDetails","get","mapDispatchToProps","uiDetailsRefresh"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport coinsActions from '../../Redux/CoinsList/actions'\r\nimport coinsDetailsActions from '../../Redux/CoinDetails/actions'\r\nimport {columns} from './utils'\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link'\r\nimport {starFull} from 'react-icons-kit/icomoon/starFull'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { Tabs, Tab, Spinner} from 'react-bootstrap'\r\nimport {addFavoritList} from '../../helpers/utils'\r\nimport ListTable from '../../Components/ListTable'\r\n\r\nclass List extends React.Component {\r\n\r\n    static propTypes = {\r\n        list        : PropTypes.array.isRequired,\r\n        UI          : PropTypes.object.isRequired,\r\n        detailsUI   : PropTypes.object.isRequired,\r\n        listReload  : PropTypes.func.isRequired,\r\n        uiRefresh   : PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('scroll', this.listenToScroll);\r\n        const {listReload, uiRefresh} = this.props;\r\n        let favorits = localStorage.getItem('favorits');\r\n        if(favorits) {\r\n            favorits = JSON.parse(favorits);\r\n        } else {\r\n            favorits = []\r\n        }\r\n        uiRefresh({favorits})\r\n        listReload();\r\n    }\r\n\r\n    listenToScroll = () => {\r\n        if(window.innerHeight + document.documentElement.scrollTop\r\n            === document.documentElement.offsetHeight) {\r\n                this.loadMoreCoins();\r\n        }\r\n      }\r\n\r\n    // loadMoreCoins = () => {\r\n    //     const { listReload, uiRefresh, UI } = this.props;\r\n    //     const { skip } = UI;\r\n    //     uiRefresh({\r\n    //         skip : skip + 1, \r\n    //     })\r\n    //     listReload();\r\n    // }\r\n    renderValue = (columnItem, listItem, index) => {\r\n        const {UI} = this.props;\r\n        const { favorits } = UI;\r\n        let liked = favorits.includes(listItem.id) ? 'active' : 'inactive';\r\n        switch (columnItem.dataIndex) {\r\n            case 'id':\r\n                return index + 1;\r\n            case 'name':\r\n                return <>\r\n                            <div className = {`starList ${liked}`}>\r\n                                <Icon icon={starFull} size={20} onClick={() =>this.addFavoritList(listItem.id)}/>\r\n                            </div>\r\n                            <Link href={`/coins/${listItem.id}`}>\r\n                                <a>\r\n                                    <img src={listItem.icon} className = 'coinIcon'/>\r\n                                    {listItem[columnItem.dataIndex]}\r\n                                </a>\r\n                            </Link>\r\n                        </>\r\n            default : \r\n            return listItem[columnItem.dataIndex]\r\n        }\r\n    }\r\n\r\n    addFavoritList = (id) => {\r\n        const { uiRefresh} = this.props;\r\n        const favorits = addFavoritList(id);\r\n        uiRefresh ({favorits});\r\n    }\r\n\r\n    render() {\r\n        const { list, UI, detailsUI, uiRefresh, listReload } = this.props;\r\n        const { loading, favorits } = UI;\r\n        const favoritsList = list.filter(item => favorits.includes(item.id));\r\n        return (\r\n            <Tabs defaultActiveKey=\"Coins\" transition={false}>\r\n                <Tab eventKey=\"Coins\" title=\"Coins\">\r\n                    <ListTable \r\n                        columns={columns}\r\n                        list={list}\r\n                        UI={UI}\r\n                        listReload={listReload}\r\n                        uiRefresh={uiRefresh}\r\n                        showMore = {true}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"favorites\" title=\"Favorites\">\r\n                    <ListTable \r\n                        columns={columns}\r\n                        list={favoritsList}\r\n                        UI={UI}\r\n                        listReload={listReload}\r\n                        showMore = {false}\r\n                        uiRefresh={uiRefresh}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { Coins, CoinDetails } = state;\r\n  return {\r\n    list  : Coins.get('list'),\r\n    UI    : Coins.get('UI'),\r\n    detailsUI : CoinDetails.get('UI'),\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  listReload : coinsActions.listReload,\r\n  uiRefresh  : coinsActions.uiRefresh,\r\n  uiDetailsRefresh  : coinsDetailsActions.uiRefresh,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}