{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CoinState/Coins/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../Redux/Coins/actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //Initialise state\n\n    _defineProperty(this, \"incrementCounter\", () => {\n      this.setState(prevState => {\n        this.setState({\n          counter: prevState.counter + 1.\n        });\n      });\n    });\n\n    _defineProperty(this, \"decrementCounter\", () => {\n      this.setState(prevState => {\n        this.setState({\n          counter: prevState.counter - 1.\n        });\n      });\n    });\n\n    this.state = {\n      counter: 0\n    };\n  }\n\n  componentdidmount() {\n    const {\n      listReload\n    } = this.props;\n    listReload();\n  }\n\n  static getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    // component will be able to read from store's state when rendered\n    // store.dispatch({ type: 'FOO', payload: 'foo' });\n    // you can pass some custom props to component from here\n    return {\n      custom: 'custom'\n    };\n  } //Updates the counter in state by +1\n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      onClick: this.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Increment\"), __jsx(\"button\", {\n      onClick: this.decrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Decrement\"), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, this.state.counter));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    locale\n  } = deriveLanguage(state);\n  const {\n    themeName\n  } = deriveTheme(state);\n  return {\n    locale,\n    selectedTheme: themeName,\n    idToken: deriveToken(state),\n    activeTabTitle: deriveActiveTabTitle(state),\n    notificationsCount: deriveAllNotificationsCount(state)\n  };\n}\n\nconst mapDispatchToProps = {\n  listReload: coinsActions.listReload\n};\nexport default connect(state => state)(App);","map":{"version":3,"sources":["/home/user/Desktop/CoinState/Coins/pages/index.js"],"names":["React","connect","coinsActions","App","Component","constructor","props","setState","prevState","counter","state","componentdidmount","listReload","getInitialProps","store","isServer","pathname","query","custom","render","incrementCounter","decrementCounter","mapStateToProps","locale","deriveLanguage","themeName","deriveTheme","selectedTheme","idToken","deriveToken","activeTabTitle","deriveActiveTabTitle","notificationsCount","deriveAllNotificationsCount","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,8CAsBA,MAAM;AACrB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAKD,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;AADnB,SAAd;AAGH,OAJD;AAKH,KA5BkB;;AAAA,8CA+BA,MAAM;AACrB,WAAKF,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAKD,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;AADnB,SAAd;AAGH,OAJD;AAKH,KArCkB;;AAIf,SAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAe,KAAKN,KAA1B;AACAM,IAAAA,UAAU;AACb;;AAED,SAAOC,eAAP,CAAuB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAvB,EAA6D;AACzD;AACA;AACA;AACA,WAAO;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAP;AACH,GArB6B,CAuB9B;;;AAkBAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWD,OAAhB,CAHJ,CADJ;AAOH;;AAjD6B;;AAoDlC,SAASa,eAAT,CAAyBZ,KAAzB,EAAgC;AAC9B,QAAM;AAAEa,IAAAA;AAAF,MAAaC,cAAc,CAACd,KAAD,CAAjC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAgBC,WAAW,CAAChB,KAAD,CAAjC;AAEA,SAAO;AACLa,IAAAA,MADK;AAELI,IAAAA,aAAa,EAAQF,SAFhB;AAGLG,IAAAA,OAAO,EAAcC,WAAW,CAACnB,KAAD,CAH3B;AAILoB,IAAAA,cAAc,EAAOC,oBAAoB,CAACrB,KAAD,CAJpC;AAKLsB,IAAAA,kBAAkB,EAAGC,2BAA2B,CAACvB,KAAD;AAL3C,GAAP;AAOD;;AACD,MAAMwB,kBAAkB,GAAG;AACzBtB,EAAAA,UAAU,EAAGV,YAAY,CAACU;AADD,CAA3B;AAGA,eAAeX,OAAO,CAACS,KAAK,IAAIA,KAAV,CAAP,CAAwBP,GAAxB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport coinsActions from '../Redux/Coins/actions'\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        //Initialise state\n        this.state = {\n            counter: 0\n        };\n    }\n\n    componentdidmount(){\n        const {listReload} = this.props;\n        listReload();\n    }\n\n    static getInitialProps({ store, isServer, pathname, query }) {\n        // component will be able to read from store's state when rendered\n        // store.dispatch({ type: 'FOO', payload: 'foo' });\n        // you can pass some custom props to component from here\n        return { custom: 'custom' };\n    }\n\n    //Updates the counter in state by +1\n    incrementCounter = () => {\n        this.setState(prevState => {\n            this.setState({\n                counter: prevState.counter + 1.\n            });\n        });\n    };\n\n    //Updates the counter in state by  -1\n    decrementCounter = () => {\n        this.setState(prevState => {\n            this.setState({\n                counter: prevState.counter - 1.\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.incrementCounter}>Increment</button>\n                <button onClick={this.decrementCounter}>Decrement</button>\n                <h1>{this.state.counter}</h1>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  const { locale } = deriveLanguage(state);\n  const { themeName } = deriveTheme(state);\n\n  return {\n    locale,\n    selectedTheme      : themeName,\n    idToken            : deriveToken(state),\n    activeTabTitle     : deriveActiveTabTitle(state),\n    notificationsCount : deriveAllNotificationsCount(state),\n  };\n}\nconst mapDispatchToProps = {\n  listReload : coinsActions.listReload,\n}\nexport default connect(state => state)(App);"]},"metadata":{},"sourceType":"module"}